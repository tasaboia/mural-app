// Defini√ß√£o da interface Category para que n√£o dependa de outras importa√ß√µes
export interface Category {
  id: string;
  name: string;
  emoji: string;
  color: string;
}

// Mapeamento entre os IDs de categorias da API e as categorias para exibi√ß√£o
export const categories: Category[] = [
  {
    id: "HEALING",   // Alterado para o valor correspondente do enum Prisma
    name: "Cura",
    emoji: "üíä",
    color: "green"
  },
  {
    id: "PROVISION", // Alterado para o valor correspondente do enum Prisma
    name: "Provis√£o",
    emoji: "üí∞",
    color: "blue"
  },
  {
    id: "SALVATION", // Alterado para o valor correspondente do enum Prisma
    name: "Salva√ß√£o",
    emoji: "üôè",
    color: "purple"
  },
  {
    id: "DELIVERANCE", // Alterado para o valor correspondente do enum Prisma
    name: "Liberta√ß√£o",
    emoji: "üîì",
    color: "red"
  },
  {
    id: "FAMILY",     // Alterado para o valor correspondente do enum Prisma
    name: "Fam√≠lia",
    emoji: "üë®‚Äçüë©‚Äçüëß‚Äçüë¶",
    color: "yellow"
  },
  {
    id: "MINISTRY",   // Alterado para o valor correspondente do enum Prisma
    name: "Minist√©rio",
    emoji: "üïäÔ∏è",
    color: "indigo"
  },
  {
    id: "OTHER",      // Alterado para o valor correspondente do enum Prisma
    name: "Outro",
    emoji: "‚ú®",
    color: "pink"
  }
];

// Fun√ß√£o para buscar uma categoria por ID
export function getCategoryById(id: string): Category | undefined {
  return categories.find(category => category.id === id);
}

// Fun√ß√£o para buscar todas as categorias
export function getAllCategories(): Category[] {
  return categories;
}
